{"version":3,"file":"index.js","sources":["../src/utils.js"],"sourcesContent":["import \"tracking\";\n\nconst getEnvironment = () => {\n\tconst ua = window?.navigator?.userAgent?.toLowerCase();\n\tconst isWeixin = ua.indexOf(\"micromessenger\") !== -1;\n\tconst isInApp = /(^|;\\s)app\\//.test(ua);\n\tif (isWeixin) {\n\t\tif (window?.__wxjs_environment === \"miniprogram\") {\n\t\t\treturn \"wxapp\";\n\t\t} else {\n\t\t\treturn \"wxh5\";\n\t\t}\n\t} else {\n\t\tif (!isInApp) {\n\t\t\treturn \"browser\";\n\t\t} else {\n\t\t\treturn \"app\";\n\t\t}\n\t}\n};\n\nconst imageDetect = () => {\n\tconst tracking = window.tracking;\n\tconst env = getEnvironment();\n\t/**\n\t * @param { String } url 图片url 本地资源路径。。。\n\t * @return { Promise } promiseObject resolve({brightness: Number,isGray: Boolean,isBright: Boolean,})\n\t * @description 检测图片的明暗度，返回一个promise，返回值为一个对象，包含brightness: Number,isGray: Boolean,isBright: Boolean；brightness: 明暗值，isGray：是否过暗，isBright：是否过亮\n\t */\n\tconst checkLuminance = (url) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (env === \"wxapp\") {\n\t\t\t\ttry {\n\t\t\t\t\twx.getImageInfo({\n\t\t\t\t\t\tsrc: url,\n\t\t\t\t\t\tsuccess: async (res) => {\n\t\t\t\t\t\t\t// 创建离屏canvas\n\t\t\t\t\t\t\tconst canvas = wx?.createOffscreenCanvas({\n\t\t\t\t\t\t\t\ttype: \"2d\",\n\t\t\t\t\t\t\t\twidth: res.width,\n\t\t\t\t\t\t\t\theight: res.height,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconst context = canvas?.getContext(\"2d\");\n\t\t\t\t\t\t\tconst image = canvas?.createImage();\n\t\t\t\t\t\t\t// 等待图片加载\n\t\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\t\timage.src = url; // 要加载的图片 url\n\t\t\t\t\t\t\t\timage.onload = resolve;\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tcontext.drawImage(image, 0, 0, res.width, res.height);\n\t\t\t\t\t\t\tconst imgData = context.getImageData(0, 0, res.width, res.height);\n\n\t\t\t\t\t\t\tconst gray = tracking.Image.grayscale(\n\t\t\t\t\t\t\t\timgData?.data,\n\t\t\t\t\t\t\t\tres.width,\n\t\t\t\t\t\t\t\tres.height\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t// 计算明暗度\n\t\t\t\t\t\t\tlet brightness = 0;\n\t\t\t\t\t\t\tfor (let i = 0; i < gray.length; i++) {\n\t\t\t\t\t\t\t\tbrightness += gray[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbrightness /= gray.length;\n\n\t\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\t\tbrightness,\n\t\t\t\t\t\t\t\tisGray: brightness < 80,\n\t\t\t\t\t\t\t\tisBright: brightness > 150,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst image = new Image();\n\t\t\t\t\timage.src = url;\n\t\t\t\t\timage.onload = () => {\n\t\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\t\tcanvas.width = image.width || image?.offsetWidth;\n\t\t\t\t\t\tcanvas.height = image.height || image?.offsetHeight;\n\n\t\t\t\t\t\tconst context = canvas.getContext(\"2d\");\n\n\t\t\t\t\t\tcontext.drawImage(image, 0, 0, canvas.width, canvas.height);\n\n\t\t\t\t\t\tconst gray = tracking.Image.grayscale(\n\t\t\t\t\t\t\tcontext.getImageData(0, 0, canvas.width, canvas.height)?.data,\n\t\t\t\t\t\t\tcanvas.width,\n\t\t\t\t\t\t\tcanvas.height\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// 计算明暗度\n\t\t\t\t\t\tlet brightness = 0;\n\t\t\t\t\t\tfor (let i = 0; i < gray.length; i++) {\n\t\t\t\t\t\t\tbrightness += gray[i];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbrightness /= gray.length;\n\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\tbrightness,\n\t\t\t\t\t\t\tisGray: brightness < 80,\n\t\t\t\t\t\t\tisBright: brightness > 150,\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\timage.onerror = () => {\n\t\t\t\t\t\treject(new Error(\"图片加载失败\"));\n\t\t\t\t\t};\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\t\t/**\n\t * @param { String } url 图片url 本地资源路径。。。\n\t * @return { Promise } promiseObject resolve({averageDiff: Number,isClear: Boolean,})\n\t * @description 检测图片的清晰度，返回一个promise，返回值为一个对象，包含averageDiff: Number,isClear: Boolean；averageDiff: 清晰度，isClear：是否清晰\n\t */\n\tconst checkDim = (url) => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (env === \"wxapp\") {\n\t\t\t\twx.getImageInfo({\n\t\t\t\t\tsrc: url,\n\t\t\t\t\tsuccess: async (res) => {\n\t\t\t\t\t\t// 创建离屏canvas\n\t\t\t\t\t\tconst canvas = wx?.createOffscreenCanvas({\n\t\t\t\t\t\t\ttype: \"2d\",\n\t\t\t\t\t\t\twidth: res.width,\n\t\t\t\t\t\t\theight: res.height,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconst context = canvas?.getContext(\"2d\");\n\t\t\t\t\t\tconst image = canvas?.createImage();\n\t\t\t\t\t\t// 等待图片加载\n\t\t\t\t\t\tawait new Promise((resolve) => {\n\t\t\t\t\t\t\timage.src = url; // 要加载的图片 url\n\t\t\t\t\t\t\timage.onload = resolve;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tcontext.drawImage(image, 0, 0, res.width, res.height);\n\t\t\t\t\t\tconst imgData = context.getImageData(0, 0, res.width, res.height);\n\t\t\t\t\t\tconst data = imgData.data;\n\n\t\t\t\t\t\t// 计算图像的模糊程度\n\t\t\t\t\t\tlet totalDiff = 0;\n\t\t\t\t\t\tfor (let i = 0; i < data.length; i += 4) {\n\t\t\t\t\t\t\t// 计算像素的灰度值\n\t\t\t\t\t\t\tconst gray = (data[i] + data[i + 1] + data[i + 2]) / 3;\n\t\t\t\t\t\t\t// 计算像素与相邻像素的差值\n\t\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\t\tconst diff = Math.abs(\n\t\t\t\t\t\t\t\t\tgray - (data[i - 4] + data[i - 3] + data[i - 2]) / 3\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\ttotalDiff += diff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 计算平均差值\n\t\t\t\t\t\tconst averageDiff = totalDiff / (image.width * image.height);\n\t\t\t\t\t\t// 输出模糊程度\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\taverageDiff,\n\t\t\t\t\t\t\tisClear: averageDiff > 4,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst image = new Image();\n\t\t\t\t\timage.src = url;\n\t\t\t\t\timage.onload = () => {\n\t\t\t\t\t\t// 创建Canvas元素\n\t\t\t\t\t\tconst canvas = document.createElement(\"canvas\");\n\t\t\t\t\t\tcanvas.width = image.width || image?.offsetWidth;\n\t\t\t\t\t\tcanvas.height = image.height || image?.offsetHeight;\n\t\t\t\t\t\tconst ctx = canvas.getContext(\"2d\");\n\t\t\t\t\t\tcanvas.width = image.width;\n\t\t\t\t\t\tcanvas.height = image.height;\n\t\t\t\t\t\tctx.drawImage(image, 0, 0, image.width, image.height);\n\n\t\t\t\t\t\t// 获取图像的像素数据\n\t\t\t\t\t\tconst imageData = ctx.getImageData(0, 0, image.width, image.height);\n\t\t\t\t\t\tconst data = imageData.data;\n\n\t\t\t\t\t\t// 计算图像的模糊程度\n\t\t\t\t\t\tlet totalDiff = 0;\n\t\t\t\t\t\tfor (let i = 0; i < data.length; i += 4) {\n\t\t\t\t\t\t\t// 计算像素的灰度值\n\t\t\t\t\t\t\tconst gray = (data[i] + data[i + 1] + data[i + 2]) / 3;\n\t\t\t\t\t\t\t// 计算像素与相邻像素的差值\n\t\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\t\tconst diff = Math.abs(\n\t\t\t\t\t\t\t\t\tgray - (data[i - 4] + data[i - 3] + data[i - 2]) / 3\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\ttotalDiff += diff;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 计算平均差值\n\t\t\t\t\t\tconst averageDiff = totalDiff / (image.width * image.height);\n\t\t\t\t\t\t// 输出模糊程度\n\t\t\t\t\t\tresolve({\n\t\t\t\t\t\t\taverageDiff,\n\t\t\t\t\t\t\tisClear: averageDiff > 4,\n\t\t\t\t\t\t});\n\t\t\t\t\t};\n\t\t\t\t\timage.onerror = () => {\n\t\t\t\t\t\treject(new Error(\"图片加载失败\"));\n\t\t\t\t\t};\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\treturn {\n\t\tcheckLuminance, // 检测图像明暗\n\t\tcheckDim, // 检测图像模糊程度\n\t};\n};\n\nexport default imageDetect;\n"],"names":["tracking","window","env","ua","navigator","userAgent","toLowerCase","isWeixin","indexOf","isInApp","test","__wxjs_environment","getEnvironment","checkLuminance","url","Promise","resolve","reject","wx","getImageInfo","src","success","async","res","canvas","createOffscreenCanvas","type","width","height","context","getContext","image","createImage","onload","drawImage","imgData","getImageData","gray","Image","grayscale","data","brightness","i","length","isGray","isBright","fail","error","document","createElement","offsetWidth","offsetHeight","onerror","Error","checkDim","totalDiff","Math","abs","averageDiff","isClear","ctx","err"],"mappings":"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"}